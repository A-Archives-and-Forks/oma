name: deb-build

on:
  push:
    tags: [ "*" ]

jobs:
  package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [
            "ubuntu:20.04",
            "ubuntu:22.04",
            "ubuntu:24.04",
            "debian:11",
            "debian:12",
          ]
    container:
      image: "${{ matrix.target }}"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Dependencies
        shell: bash
        run: |
          apt-get update
          apt-get install -y build-essential zlib1g-dev libssl-dev pkgconf nettle-dev libapt-pkg-dev curl xz-utils clang
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: false
      - uses: Swatinem/rust-cache@v2
        with:
          key: "${{ matrix.target }}"
      - name: Install cargo-deb
        run: cargo install -f cargo-deb
      - name: Build deb package
        shell: bash
        run: |
          cargo deb -Z xz
          VER_SUFFIX="${TARGET_DISTRO/:/}"
          for i in target/debian/*.deb; do
            mv -v "${i}" "${i/\.deb/-$VER_SUFFIX.deb}"
          done
          echo "VER_SUFFIX=${VER_SUFFIX}" >> "${GITHUB_ENV}"
        env:
          TARGET_DISTRO: "${{ matrix.target }}"
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.VER_SUFFIX }}
          path: "target/debian/*.deb"
  # Release stage
  release:
    runs-on: ubuntu-latest
    needs: package
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/download-artifact@v4
      - name: Upload artifacts
        uses: alexellis/upload-assets@0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./**/*.tar.*","./**/*.deb"]'
